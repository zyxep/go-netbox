// Code generated by go-swagger; DO NOT EDIT.

// Copyright (c) 2020 Samuel Mutel <12967891+smutel@users.noreply.github.com>
//
// Permission to use, copy, modify, and distribute this software for any
// purpose with or without fee is hereby granted, provided that the above
// copyright notice and this permission notice appear in all copies.
//
// THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
//

package plugins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new plugins API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for plugins API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	PluginsNbGatewaysGatewayBulkDelete(params *PluginsNbGatewaysGatewayBulkDeleteParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PluginsNbGatewaysGatewayBulkDeleteNoContent, error)

	PluginsNbGatewaysGatewayBulkPartialUpdate(params *PluginsNbGatewaysGatewayBulkPartialUpdateParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PluginsNbGatewaysGatewayBulkPartialUpdateOK, error)

	PluginsNbGatewaysGatewayBulkUpdate(params *PluginsNbGatewaysGatewayBulkUpdateParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PluginsNbGatewaysGatewayBulkUpdateOK, error)

	PluginsNbGatewaysGatewayCreate(params *PluginsNbGatewaysGatewayCreateParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PluginsNbGatewaysGatewayCreateCreated, error)

	PluginsNbGatewaysGatewayDelete(params *PluginsNbGatewaysGatewayDeleteParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PluginsNbGatewaysGatewayDeleteNoContent, error)

	PluginsNbGatewaysGatewayList(params *PluginsNbGatewaysGatewayListParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PluginsNbGatewaysGatewayListOK, error)

	PluginsNbGatewaysGatewayPartialUpdate(params *PluginsNbGatewaysGatewayPartialUpdateParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PluginsNbGatewaysGatewayPartialUpdateOK, error)

	PluginsNbGatewaysGatewayRead(params *PluginsNbGatewaysGatewayReadParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PluginsNbGatewaysGatewayReadOK, error)

	PluginsNbGatewaysGatewayUpdate(params *PluginsNbGatewaysGatewayUpdateParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PluginsNbGatewaysGatewayUpdateOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
PluginsNbGatewaysGatewayBulkDelete plugins nb gateways gateway bulk delete API
*/
func (a *Client) PluginsNbGatewaysGatewayBulkDelete(params *PluginsNbGatewaysGatewayBulkDeleteParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PluginsNbGatewaysGatewayBulkDeleteNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPluginsNbGatewaysGatewayBulkDeleteParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "plugins_nb-gateways_gateway_bulk_delete",
		Method:             "DELETE",
		PathPattern:        "/plugins/nb-gateways/gateway/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PluginsNbGatewaysGatewayBulkDeleteReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PluginsNbGatewaysGatewayBulkDeleteNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for plugins_nb-gateways_gateway_bulk_delete: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
PluginsNbGatewaysGatewayBulkPartialUpdate plugins nb gateways gateway bulk partial update API
*/
func (a *Client) PluginsNbGatewaysGatewayBulkPartialUpdate(params *PluginsNbGatewaysGatewayBulkPartialUpdateParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PluginsNbGatewaysGatewayBulkPartialUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPluginsNbGatewaysGatewayBulkPartialUpdateParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "plugins_nb-gateways_gateway_bulk_partial_update",
		Method:             "PATCH",
		PathPattern:        "/plugins/nb-gateways/gateway/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PluginsNbGatewaysGatewayBulkPartialUpdateReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PluginsNbGatewaysGatewayBulkPartialUpdateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for plugins_nb-gateways_gateway_bulk_partial_update: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
PluginsNbGatewaysGatewayBulkUpdate plugins nb gateways gateway bulk update API
*/
func (a *Client) PluginsNbGatewaysGatewayBulkUpdate(params *PluginsNbGatewaysGatewayBulkUpdateParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PluginsNbGatewaysGatewayBulkUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPluginsNbGatewaysGatewayBulkUpdateParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "plugins_nb-gateways_gateway_bulk_update",
		Method:             "PUT",
		PathPattern:        "/plugins/nb-gateways/gateway/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PluginsNbGatewaysGatewayBulkUpdateReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PluginsNbGatewaysGatewayBulkUpdateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for plugins_nb-gateways_gateway_bulk_update: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
PluginsNbGatewaysGatewayCreate plugins nb gateways gateway create API
*/
func (a *Client) PluginsNbGatewaysGatewayCreate(params *PluginsNbGatewaysGatewayCreateParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PluginsNbGatewaysGatewayCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPluginsNbGatewaysGatewayCreateParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "plugins_nb-gateways_gateway_create",
		Method:             "POST",
		PathPattern:        "/plugins/nb-gateways/gateway/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PluginsNbGatewaysGatewayCreateReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PluginsNbGatewaysGatewayCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for plugins_nb-gateways_gateway_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
PluginsNbGatewaysGatewayDelete plugins nb gateways gateway delete API
*/
func (a *Client) PluginsNbGatewaysGatewayDelete(params *PluginsNbGatewaysGatewayDeleteParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PluginsNbGatewaysGatewayDeleteNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPluginsNbGatewaysGatewayDeleteParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "plugins_nb-gateways_gateway_delete",
		Method:             "DELETE",
		PathPattern:        "/plugins/nb-gateways/gateway/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PluginsNbGatewaysGatewayDeleteReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PluginsNbGatewaysGatewayDeleteNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for plugins_nb-gateways_gateway_delete: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
PluginsNbGatewaysGatewayList plugins nb gateways gateway list API
*/
func (a *Client) PluginsNbGatewaysGatewayList(params *PluginsNbGatewaysGatewayListParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PluginsNbGatewaysGatewayListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPluginsNbGatewaysGatewayListParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "plugins_nb-gateways_gateway_list",
		Method:             "GET",
		PathPattern:        "/plugins/nb-gateways/gateway/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PluginsNbGatewaysGatewayListReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PluginsNbGatewaysGatewayListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for plugins_nb-gateways_gateway_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
PluginsNbGatewaysGatewayPartialUpdate plugins nb gateways gateway partial update API
*/
func (a *Client) PluginsNbGatewaysGatewayPartialUpdate(params *PluginsNbGatewaysGatewayPartialUpdateParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PluginsNbGatewaysGatewayPartialUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPluginsNbGatewaysGatewayPartialUpdateParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "plugins_nb-gateways_gateway_partial_update",
		Method:             "PATCH",
		PathPattern:        "/plugins/nb-gateways/gateway/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PluginsNbGatewaysGatewayPartialUpdateReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PluginsNbGatewaysGatewayPartialUpdateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for plugins_nb-gateways_gateway_partial_update: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
PluginsNbGatewaysGatewayRead plugins nb gateways gateway read API
*/
func (a *Client) PluginsNbGatewaysGatewayRead(params *PluginsNbGatewaysGatewayReadParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PluginsNbGatewaysGatewayReadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPluginsNbGatewaysGatewayReadParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "plugins_nb-gateways_gateway_read",
		Method:             "GET",
		PathPattern:        "/plugins/nb-gateways/gateway/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PluginsNbGatewaysGatewayReadReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PluginsNbGatewaysGatewayReadOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for plugins_nb-gateways_gateway_read: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
PluginsNbGatewaysGatewayUpdate plugins nb gateways gateway update API
*/
func (a *Client) PluginsNbGatewaysGatewayUpdate(params *PluginsNbGatewaysGatewayUpdateParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PluginsNbGatewaysGatewayUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPluginsNbGatewaysGatewayUpdateParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "plugins_nb-gateways_gateway_update",
		Method:             "PUT",
		PathPattern:        "/plugins/nb-gateways/gateway/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PluginsNbGatewaysGatewayUpdateReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PluginsNbGatewaysGatewayUpdateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for plugins_nb-gateways_gateway_update: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
